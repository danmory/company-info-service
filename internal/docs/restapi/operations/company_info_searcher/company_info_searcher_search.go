// Code generated by go-swagger; DO NOT EDIT.

package company_info_searcher

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// CompanyInfoSearcherSearchHandlerFunc turns a function with the right signature into a company info searcher search handler
type CompanyInfoSearcherSearchHandlerFunc func(CompanyInfoSearcherSearchParams) middleware.Responder

// Handle executing the request and returning a response
func (fn CompanyInfoSearcherSearchHandlerFunc) Handle(params CompanyInfoSearcherSearchParams) middleware.Responder {
	return fn(params)
}

// CompanyInfoSearcherSearchHandler interface for that can handle valid company info searcher search params
type CompanyInfoSearcherSearchHandler interface {
	Handle(CompanyInfoSearcherSearchParams) middleware.Responder
}

// NewCompanyInfoSearcherSearch creates a new http.Handler for the company info searcher search operation
func NewCompanyInfoSearcherSearch(ctx *middleware.Context, handler CompanyInfoSearcherSearchHandler) *CompanyInfoSearcherSearch {
	return &CompanyInfoSearcherSearch{Context: ctx, Handler: handler}
}

/*
	CompanyInfoSearcherSearch swagger:route GET /inn/{inn} CompanyInfoSearcher companyInfoSearcherSearch

CompanyInfoSearcherSearch company info searcher search API
*/
type CompanyInfoSearcherSearch struct {
	Context *middleware.Context
	Handler CompanyInfoSearcherSearchHandler
}

func (o *CompanyInfoSearcherSearch) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewCompanyInfoSearcherSearchParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
